{"ast":null,"code":"var _jsxFileName = \"/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/App.js\";\nimport { insertionSort } from \"util/sorts/insertionSort\";\nimport { selectionSort } from \"util/sorts/selectionSort\";\nimport { bubbleSort } from \"util/sorts/bubbleSort\";\nimport questions from \"questions\";\n\n// const arr = new Array(10000).fill(0).map((_, i) => i + 1);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  // questions.dp.soldierAnts(5, [4, 3, 1, 5, 5])\n  // questions.dp.makeItOne(26);\n  // questions.dp.currencyComposition([3, 15], 3, 5, 7)\n  // questions.dp.goldMine(\"3 4\", \"1 3 3 2 2 1 4 1 0 6 4 7\");\n  questions.dp.arraySoldier(9, \"15 11 8 20 17 16 15 7 2\");\n  // questions.dp.arraySoldier(7, \"15 11 4 8 5 2 4\");\n\n  // 같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다.\n  // 같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다.\n  // 모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다.\n\n  // 3, 3, 3 = 10,000 + 3 * 1,000; (같은 수)\n  // 3, 3, 6 = 1,000 + 3 * 100; (같은 수)\n  // 2, 3, 6 = 6 * 100; (가장 큰 수)\n\n  const input = [5, 2, 4];\n  const num = Math.max(...input);\n  if (num === Math.min(...input)) {\n    return console.log(10000 + input[0] * 1000);\n  }\n  for (let i = 0; i < input.length; i++) {\n    for (let j = i + 1; j < input.length; j++) {\n      if (input[i] === input[j]) {\n        return console.log(1000 + input[i] * 100);\n      }\n    }\n  }\n  return console.log(num * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Algorithm Packages\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["insertionSort","selectionSort","bubbleSort","questions","jsxDEV","_jsxDEV","App","dp","arraySoldier","input","num","Math","max","min","console","log","i","length","j","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/App.js"],"sourcesContent":["import { insertionSort } from \"util/sorts/insertionSort\";\nimport { selectionSort } from \"util/sorts/selectionSort\";\nimport { bubbleSort } from \"util/sorts/bubbleSort\";\nimport questions from \"questions\";\n\n// const arr = new Array(10000).fill(0).map((_, i) => i + 1);\nexport default function App() {\n  // questions.dp.soldierAnts(5, [4, 3, 1, 5, 5])\n  // questions.dp.makeItOne(26);\n  // questions.dp.currencyComposition([3, 15], 3, 5, 7)\n  // questions.dp.goldMine(\"3 4\", \"1 3 3 2 2 1 4 1 0 6 4 7\");\n  questions.dp.arraySoldier(9, \"15 11 8 20 17 16 15 7 2\");\n  // questions.dp.arraySoldier(7, \"15 11 4 8 5 2 4\");\n\n  // 같은 눈이 3개가 나오면 10,000원+(같은 눈)×1,000원의 상금을 받게 된다.\n  // 같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)×100원의 상금을 받게 된다.\n  // 모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)×100원의 상금을 받게 된다.\n\n  // 3, 3, 3 = 10,000 + 3 * 1,000; (같은 수)\n  // 3, 3, 6 = 1,000 + 3 * 100; (같은 수)\n  // 2, 3, 6 = 6 * 100; (가장 큰 수)\n\n  const input = [5, 2, 4];\n  const num = Math.max(...input);\n\n  if (num === Math.min(...input)) {\n    return console.log(10000 + input[0] * 1000);\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    for (let j = i + 1; j < input.length; j++) {\n      if (input[i] === input[j]) {\n        return console.log(1000 + input[i] * 100);\n      }\n    }\n  }\n  return console.log(num * 100);\n\n  return <div>Algorithm Packages</div>;\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,SAAS,MAAM,WAAW;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B;EACA;EACA;EACA;EACAH,SAAS,CAACI,EAAE,CAACC,YAAY,CAAC,CAAC,EAAE,yBAAyB,CAAC;EACvD;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,MAAMC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGH,KAAK,CAAC;EAE9B,IAAIC,GAAG,KAAKC,IAAI,CAACE,GAAG,CAAC,GAAGJ,KAAK,CAAC,EAAE;IAC9B,OAAOK,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGN,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EAC7C;EAEA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,KAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGT,KAAK,CAACQ,MAAM,EAAEC,CAAC,EAAE,EAAE;MACzC,IAAIT,KAAK,CAACO,CAAC,CAAC,KAAKP,KAAK,CAACS,CAAC,CAAC,EAAE;QACzB,OAAOJ,OAAO,CAACC,GAAG,CAAC,IAAI,GAAGN,KAAK,CAACO,CAAC,CAAC,GAAG,GAAG,CAAC;MAC3C;IACF;EACF;EACA,OAAOF,OAAO,CAACC,GAAG,CAACL,GAAG,GAAG,GAAG,CAAC;EAE7B,oBAAOL,OAAA;IAAAc,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACtC;AAACC,EAAA,GAjCuBlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}