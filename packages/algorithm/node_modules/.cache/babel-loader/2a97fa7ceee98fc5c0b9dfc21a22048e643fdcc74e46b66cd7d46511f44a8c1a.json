{"ast":null,"code":"/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      if (Number(soldierApArr[j]) > Number(soldierApArr[i])) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n  return n - Math.max(...arr);\n}\n\n/**\n * 단편적으로 접근\n * 문제의 핵심은 전투력을 내림차순으로 나열할 수 있는 병사의 최대 수를 구하는 것 (LIS알고리즘)\n * 총 병사의 수에서 나열된 병사의 수를 제외하면 열외시킨 병사의 수를 파악할 수 있다.\n */\nfunction wrong(n, str) {\n  const arr = str.split(\" \");\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n    return sum;\n  }, 0);\n  return result;\n}\nexport default arraySoldier;","map":{"version":3,"names":["arraySoldier","n","str","soldierApArr","split","arr","Array","fill","i","j","Number","Math","max","wrong","result","reduce","sum","soldier","nextSoldier"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/questions/dp/arraySoldier.js"],"sourcesContent":["/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      if (Number(soldierApArr[j]) > Number(soldierApArr[i])) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n\n  return n - Math.max(...arr);\n}\n\n/**\n * 단편적으로 접근\n * 문제의 핵심은 전투력을 내림차순으로 나열할 수 있는 병사의 최대 수를 구하는 것 (LIS알고리즘)\n * 총 병사의 수에서 나열된 병사의 수를 제외하면 열외시킨 병사의 수를 파악할 수 있다.\n */\nfunction wrong(n, str) {\n  const arr = str.split(\" \");\n\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n\n    return sum;\n  }, 0);\n\n  return result;\n}\n\nexport default arraySoldier;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAYA,CAACC,CAAC,EAAEC,GAAG,EAAE;EAC5B,MAAMC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACL,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC;EAEhC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAEO,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;MAC1B,IAAIC,MAAM,CAACP,YAAY,CAACM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACP,YAAY,CAACK,CAAC,CAAC,CAAC,EAAE;QACrDH,GAAG,CAACG,CAAC,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACP,GAAG,CAACG,CAAC,CAAC,EAAEH,GAAG,CAACI,CAAC,CAAC,GAAG,CAAC,CAAC;MACvC;IACF;EACF;EAEA,OAAOR,CAAC,GAAGU,IAAI,CAACC,GAAG,CAAC,GAAGP,GAAG,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASQ,KAAKA,CAACZ,CAAC,EAAEC,GAAG,EAAE;EACrB,MAAMG,GAAG,GAAGH,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAE1B,MAAMU,MAAM,GAAGT,GAAG,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,EAAET,CAAC,KAAK;IAC7C,MAAMU,WAAW,GAAGb,GAAG,CAACG,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIE,MAAM,CAACO,OAAO,CAAC,GAAGP,MAAM,CAACQ,WAAW,CAAC,EAAE;MACzC,OAAOF,GAAG,GAAG,CAAC;IAChB;IAEA,OAAOA,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC;EAEL,OAAOF,MAAM;AACf;AAEA,eAAed,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}