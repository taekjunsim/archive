{"ast":null,"code":"// 식량 털기(개미 전사)\n//  n은 창고의 개수 (3 <= n <= 100)\n//  k는 식량의 양 (0<= k <= 1000)\n\nfunction soldierAnts(n, arr) {\n  let maxArr = new Array(n).fill(0);\n  maxArr[0] = arr[0];\n  maxArr[1] = Math.max(arr[0], arr[1]);\n  for (let i = 2; i < n; i++) {\n    maxArr[i] = Math.max(maxArr[i - 1], maxArr[i - 2] + arr[i]);\n  }\n  return maxArr[n - 1];\n}\nexport default {\n  soldierAnts\n};\n\n// maxArr의 i번째 값은 항상 최대값이기 때문에 이전 값들의 합계가 모두 포함되어 있다.\n// 그러므로 maxArr의 i번째 값과","map":{"version":3,"names":["soldierAnts","n","arr","maxArr","Array","fill","Math","max","i"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/questions/dp/soldierAnts.js"],"sourcesContent":["// 식량 털기(개미 전사)\n//  n은 창고의 개수 (3 <= n <= 100)\n//  k는 식량의 양 (0<= k <= 1000)\n\nfunction soldierAnts(n, arr) {\n  let maxArr = new Array(n).fill(0);\n\n  maxArr[0] = arr[0];\n  maxArr[1] = Math.max(arr[0], arr[1]);\n\n  for (let i = 2; i < n; i++) {\n    maxArr[i] = Math.max(maxArr[i - 1], maxArr[i - 2] + arr[i]);\n  }\n\n  return maxArr[n - 1];\n}\n\nexport default { soldierAnts };\n\n// maxArr의 i번째 값은 항상 최대값이기 때문에 이전 값들의 합계가 모두 포함되어 있다.\n// 그러므로 maxArr의 i번째 값과\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,WAAWA,CAACC,CAAC,EAAEC,GAAG,EAAE;EAC3B,IAAIC,MAAM,GAAG,IAAIC,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EAEjCF,MAAM,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC;EAClBC,MAAM,CAAC,CAAC,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACL,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;EAEpC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAEO,CAAC,EAAE,EAAE;IAC1BL,MAAM,CAACK,CAAC,CAAC,GAAGF,IAAI,CAACC,GAAG,CAACJ,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,EAAEL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGN,GAAG,CAACM,CAAC,CAAC,CAAC;EAC7D;EAEA,OAAOL,MAAM,CAACF,CAAC,GAAG,CAAC,CAAC;AACtB;AAEA,eAAe;EAAED;AAAY,CAAC;;AAE9B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}