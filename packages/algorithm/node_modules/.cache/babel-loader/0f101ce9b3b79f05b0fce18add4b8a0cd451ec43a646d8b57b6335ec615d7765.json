{"ast":null,"code":"export function bubbleSort(arr) {\n  const result = [...arr];\n  for (let i = 0; i < result.length - 1; i++) {\n    for (let j = 1; j < result.length; j++) {\n      if (result[j - 1] > result[j]) {\n        [result[j - 1], result[j]] = [result[j], result[j - 1]];\n      }\n    }\n  }\n  return result;\n}\n\n// 정렬이 완료된 이후에는 반복문을 종료하지만 중복이 전혀 없는 것은 아니기 때문에 개선의 여지가 있음\nexport function improvedBubbleSort(arr) {\n  const result = [...arr];\n  let flag = 1;\n  for (let i = 0; flag && i < result.length - 1; i++) {\n    flag = 0;\n    for (let j = 1; j < result.length; j++) {\n      if (result[j - 1] > result[j]) {\n        [result[j - 1], result[j]] = [result[j], result[j - 1]];\n        flag++;\n      }\n    }\n  }\n  return result;\n}\n\n// 0\n// [4, 3, 2, 1, 5, -5, 20, 17]\n// [3, 4, 2, 1, 5, -5, 20, 17]\n// [3, 2, 4, 1, 5, -5, 20, 17]\n// [3, 2, 1, 4, 5, -5, 20, 17]\n// [3, 2, 1, 4, 5, -5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 17, 20]\n\n// 1\n// [3, 2, 1, 4, -5, 5, 17, 20]\n// [2, 3, 1, 4, -5, 5, 17, 20]\n// [2, 1, 3, 4, -5, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n\n// 2\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [1, 2, 3, -5, 4, 5, 17, 20]\n// [1, 2, 3, -5, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n\n// 3\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n\n// 4\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n\n// 5\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n\n// 6\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]","map":{"version":3,"names":["bubbleSort","arr","result","i","length","j","improvedBubbleSort","flag"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/util/sorts/bubbleSort.js"],"sourcesContent":["export function bubbleSort(arr) {\n  const result = [...arr];\n\n  for (let i = 0; i < result.length - 1; i++) {\n    for (let j = 1; j < result.length; j++) {\n      if (result[j - 1] > result[j]) {\n        [result[j - 1], result[j]] = [result[j], result[j - 1]];\n      }\n    }\n  }\n\n  return result;\n}\n\n// 정렬이 완료된 이후에는 반복문을 종료하지만 중복이 전혀 없는 것은 아니기 때문에 개선의 여지가 있음\nexport function improvedBubbleSort(arr) {\n  const result = [...arr];\n  let flag = 1;\n\n  for (let i = 0; flag && i < result.length - 1; i++) {\n    flag = 0;\n    for (let j = 1; j < result.length; j++) {\n      if (result[j - 1] > result[j]) {\n        [result[j - 1], result[j]] = [result[j], result[j - 1]];\n        flag++;\n      }\n    }\n  }\n\n  return result;\n}\n\n// 0\n// [4, 3, 2, 1, 5, -5, 20, 17]\n// [3, 4, 2, 1, 5, -5, 20, 17]\n// [3, 2, 4, 1, 5, -5, 20, 17]\n// [3, 2, 1, 4, 5, -5, 20, 17]\n// [3, 2, 1, 4, 5, -5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 20, 17]\n// [3, 2, 1, 4, -5, 5, 17, 20]\n\n// 1\n// [3, 2, 1, 4, -5, 5, 17, 20]\n// [2, 3, 1, 4, -5, 5, 17, 20]\n// [2, 1, 3, 4, -5, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [2, 1, 3, -5, 4, 5, 17, 20]\n\n// 2\n// [2, 1, 3, -5, 4, 5, 17, 20]\n// [1, 2, 3, -5, 4, 5, 17, 20]\n// [1, 2, 3, -5, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n\n// 3\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, 2, -5, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [1, -5, 2, 3, 4, 5, 17, 20]\n\n// 4\n// [1, -5, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n\n// 5\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n\n// 6\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n// [-5, 1, 2, 3, 4, 5, 17, 20]\n"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,GAAG,EAAE;EAC9B,MAAMC,MAAM,GAAG,CAAC,GAAGD,GAAG,CAAC;EAEvB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAC1C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAIH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACG,CAAC,CAAC,EAAE;QAC7B,CAACH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,MAAM,CAACG,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC;MACzD;IACF;EACF;EAEA,OAAOH,MAAM;AACf;;AAEA;AACA,OAAO,SAASI,kBAAkBA,CAACL,GAAG,EAAE;EACtC,MAAMC,MAAM,GAAG,CAAC,GAAGD,GAAG,CAAC;EACvB,IAAIM,IAAI,GAAG,CAAC;EAEZ,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEI,IAAI,IAAIJ,CAAC,GAAGD,MAAM,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAClDI,IAAI,GAAG,CAAC;IACR,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAIH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACG,CAAC,CAAC,EAAE;QAC7B,CAACH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,MAAM,CAACG,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvDE,IAAI,EAAE;MACR;IACF;EACF;EAEA,OAAOL,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}