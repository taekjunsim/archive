{"ast":null,"code":"/**\n * 효율적인 화폐구성\n *  n = 화폐의 종류(1 <= n <= 100)\n *  m = 가치의 합(1 <= m <= 10,000)\n */\n\nfunction currencyComposition(nm, ...currency) {\n  const [n, m] = nm;\n  const arr = new Array(m).fill(10001); // 0 대신 10,001을 넣는 이유는 뭘까?\n  arr[0] = 0;\n  currency.forEach(price => {\n    // price = 3, 5, 7\n    // 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n    // 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n    // 7, 8, 9, 10, 11, 12, 13, 14, 15\n    for (let i = price; i < m + 1; i++) {\n      if (arr[i - price] !== 10001) {\n        console.log(arr);\n        arr[i] = Math.min(arr[i], arr[i - price] + 1);\n      }\n    }\n  });\n\n  // console.log(arr);\n  return;\n}\nexport default currencyComposition;","map":{"version":3,"names":["currencyComposition","nm","currency","n","m","arr","Array","fill","forEach","price","i","console","log","Math","min"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/questions/dp/currencyComposition.js"],"sourcesContent":["/**\n * 효율적인 화폐구성\n *  n = 화폐의 종류(1 <= n <= 100)\n *  m = 가치의 합(1 <= m <= 10,000)\n */\n\nfunction currencyComposition(nm, ...currency) {\n  const [n, m] = nm;\n  const arr = new Array(m).fill(10001); // 0 대신 10,001을 넣는 이유는 뭘까?\n  arr[0] = 0;\n  currency.forEach((price) => {\n    // price = 3, 5, 7\n    // 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n    // 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n    // 7, 8, 9, 10, 11, 12, 13, 14, 15\n    for (let i = price; i < m + 1; i++) {\n      if (arr[i - price] !== 10001) {\n        console.log(arr);\n        arr[i] = Math.min(arr[i], arr[i - price] + 1);\n      }\n    }\n  });\n\n  // console.log(arr);\n  return;\n}\n\nexport default currencyComposition;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmBA,CAACC,EAAE,EAAE,GAAGC,QAAQ,EAAE;EAC5C,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,EAAE;EACjB,MAAMI,GAAG,GAAG,IAAIC,KAAK,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACtCF,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACVH,QAAQ,CAACM,OAAO,CAAEC,KAAK,IAAK;IAC1B;IACA;IACA;IACA;IACA,KAAK,IAAIC,CAAC,GAAGD,KAAK,EAAEC,CAAC,GAAGN,CAAC,GAAG,CAAC,EAAEM,CAAC,EAAE,EAAE;MAClC,IAAIL,GAAG,CAACK,CAAC,GAAGD,KAAK,CAAC,KAAK,KAAK,EAAE;QAC5BE,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;QAChBA,GAAG,CAACK,CAAC,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACT,GAAG,CAACK,CAAC,CAAC,EAAEL,GAAG,CAACK,CAAC,GAAGD,KAAK,CAAC,GAAG,CAAC,CAAC;MAC/C;IACF;EACF,CAAC,CAAC;;EAEF;EACA;AACF;AAEA,eAAeT,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}