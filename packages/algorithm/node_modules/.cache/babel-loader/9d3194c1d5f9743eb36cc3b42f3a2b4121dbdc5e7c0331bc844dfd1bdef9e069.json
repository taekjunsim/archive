{"ast":null,"code":"var _jsxFileName = \"/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/App.js\";\nimport { insertionSort } from \"util/sorts/insertionSort\";\nimport { selectionSort } from \"util/sorts/selectionSort\";\nimport { bubbleSort } from \"util/sorts/bubbleSort\";\nimport questions from \"questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst n = 20;\nconst str = new Array(n).fill(1).map(el => Math.floor(Math.random() * 2000)).join(\" \");\n\n// const arr = new Array(10000).fill(0).map((_, i) => i + 1);\nexport default function App() {\n  // questions.dp.soldierAnts(5, [4, 3, 1, 5, 5])\n  // questions.dp.makeItOne(26);\n  // questions.dp.currencyComposition([3, 15], 3, 5, 7)\n  // questions.dp.goldMine(\"3 4\", \"1 3 3 2 2 1 4 1 0 6 4 7\");\n\n  console.log(str);\n  questions.dp.arraySoldier(n, str);\n  questions.dp.notDp(n, str);\n  // 4 2 5 8 4 11 15\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Algorithm Packages\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["insertionSort","selectionSort","bubbleSort","questions","jsxDEV","_jsxDEV","n","str","Array","fill","map","el","Math","floor","random","join","App","console","log","dp","arraySoldier","notDp","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/App.js"],"sourcesContent":["import { insertionSort } from \"util/sorts/insertionSort\";\nimport { selectionSort } from \"util/sorts/selectionSort\";\nimport { bubbleSort } from \"util/sorts/bubbleSort\";\nimport questions from \"questions\";\nconst n = 20;\nconst str = new Array(n)\n  .fill(1)\n  .map((el) => Math.floor(Math.random() * 2000))\n  .join(\" \");\n\n// const arr = new Array(10000).fill(0).map((_, i) => i + 1);\nexport default function App() {\n  // questions.dp.soldierAnts(5, [4, 3, 1, 5, 5])\n  // questions.dp.makeItOne(26);\n  // questions.dp.currencyComposition([3, 15], 3, 5, 7)\n  // questions.dp.goldMine(\"3 4\", \"1 3 3 2 2 1 4 1 0 6 4 7\");\n\n  console.log(str);\n  questions.dp.arraySoldier(n, str);\n  questions.dp.notDp(n, str);\n  // 4 2 5 8 4 11 15\n\n  return <div>Algorithm Packages</div>;\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,SAAS,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACF,CAAC,CAAC,CACrBG,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAEC,EAAE,IAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAC7CC,IAAI,CAAC,GAAG,CAAC;;AAEZ;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B;EACA;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;EAChBJ,SAAS,CAACgB,EAAE,CAACC,YAAY,CAACd,CAAC,EAAEC,GAAG,CAAC;EACjCJ,SAAS,CAACgB,EAAE,CAACE,KAAK,CAACf,CAAC,EAAEC,GAAG,CAAC;EAC1B;;EAEA,oBAAOF,OAAA;IAAAiB,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACtC;AAACC,EAAA,GAZuBX,GAAG;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}