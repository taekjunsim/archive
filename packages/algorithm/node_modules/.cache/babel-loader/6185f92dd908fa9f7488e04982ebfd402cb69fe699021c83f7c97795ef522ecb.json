{"ast":null,"code":"/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nexport function notDp(n, str) {\n  const arr = str.split(\" \");\n  console.time(\"notDp\");\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n    return sum;\n  }, 0);\n  console.log(\"notDp\", result);\n  console.timeEnd(\"notDp\");\n  return result;\n}\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n  console.time(\"dp\");\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      // console.log(arr, i, j, soldierApArr[i], soldierApArr[j]);\n      if (Number(soldierApArr[j]) > Number(soldierApArr[i])) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n  console.log(\"dp\", arr[n - 1]);\n  console.timeEnd(\"dp\");\n}\nexport default arraySoldier;","map":{"version":3,"names":["notDp","n","str","arr","split","console","time","result","reduce","sum","soldier","i","nextSoldier","Number","log","timeEnd","arraySoldier","soldierApArr","Array","fill","j","Math","max"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/questions/dp/arraySoldier.js"],"sourcesContent":["/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nexport function notDp(n, str) {\n  const arr = str.split(\" \");\n\n  console.time(\"notDp\");\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n\n    return sum;\n  }, 0);\n  console.log(\"notDp\", result);\n  console.timeEnd(\"notDp\");\n\n  return result;\n}\n\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n\n  console.time(\"dp\");\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      // console.log(arr, i, j, soldierApArr[i], soldierApArr[j]);\n      if (Number(soldierApArr[j]) > Number(soldierApArr[i])) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n\n  console.log(\"dp\", arr[n - 1]);\n  console.timeEnd(\"dp\");\n}\n\nexport default arraySoldier;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,KAAKA,CAACC,CAAC,EAAEC,GAAG,EAAE;EAC5B,MAAMC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAE1BC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;EACrB,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,EAAEC,CAAC,KAAK;IAC7C,MAAMC,WAAW,GAAGT,GAAG,CAACQ,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIE,MAAM,CAACH,OAAO,CAAC,GAAGG,MAAM,CAACD,WAAW,CAAC,EAAE;MACzC,OAAOH,GAAG,GAAG,CAAC;IAChB;IAEA,OAAOA,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC;EACLJ,OAAO,CAACS,GAAG,CAAC,OAAO,EAAEP,MAAM,CAAC;EAC5BF,OAAO,CAACU,OAAO,CAAC,OAAO,CAAC;EAExB,OAAOR,MAAM;AACf;AAEA,SAASS,YAAYA,CAACf,CAAC,EAAEC,GAAG,EAAE;EAC5B,MAAMe,YAAY,GAAGf,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,MAAMD,GAAG,GAAG,IAAIe,KAAK,CAACjB,CAAC,CAAC,CAACkB,IAAI,CAAC,CAAC,CAAC;EAEhCd,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;EAClB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,CAAC,EAAEU,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,EAAES,CAAC,EAAE,EAAE;MAC1B;MACA,IAAIP,MAAM,CAACI,YAAY,CAACG,CAAC,CAAC,CAAC,GAAGP,MAAM,CAACI,YAAY,CAACN,CAAC,CAAC,CAAC,EAAE;QACrDR,GAAG,CAACQ,CAAC,CAAC,GAAGU,IAAI,CAACC,GAAG,CAACnB,GAAG,CAACQ,CAAC,CAAC,EAAER,GAAG,CAACiB,CAAC,CAAC,GAAG,CAAC,CAAC;MACvC;IACF;EACF;EAEAf,OAAO,CAACS,GAAG,CAAC,IAAI,EAAEX,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7BI,OAAO,CAACU,OAAO,CAAC,IAAI,CAAC;AACvB;AAEA,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}