{"ast":null,"code":"/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nfunction m(n, str) {\n  const arr = str.split(\" \");\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n    return sum;\n  }, 0);\n  return result;\n}\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      console.log(arr, i, j, soldierApArr[i], soldierApArr[j]);\n      if (soldierApArr[i] > soldierApArr[j]) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n\n  // console.log(arr);\n}\nexport default arraySoldier;","map":{"version":3,"names":["m","n","str","arr","split","result","reduce","sum","soldier","i","nextSoldier","Number","arraySoldier","soldierApArr","Array","fill","j","console","log","Math","max"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/questions/dp/arraySoldier.js"],"sourcesContent":["/**\n * 병사 배치하기\n *  n = 병사의 수 (1 <= n <= 2000)\n *  str = 병사의 전투력\n */\n\nfunction m(n, str) {\n  const arr = str.split(\" \");\n\n  const result = arr.reduce((sum, soldier, i) => {\n    const nextSoldier = arr[i + 1];\n    if (Number(soldier) < Number(nextSoldier)) {\n      return sum + 1;\n    }\n\n    return sum;\n  }, 0);\n\n  return result;\n}\n\nfunction arraySoldier(n, str) {\n  const soldierApArr = str.split(\" \");\n  const arr = new Array(n).fill(1);\n\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      console.log(arr, i, j, soldierApArr[i], soldierApArr[j]);\n      if (soldierApArr[i] > soldierApArr[j]) {\n        arr[i] = Math.max(arr[i], arr[j] + 1);\n      }\n    }\n  }\n\n  // console.log(arr);\n}\n\nexport default arraySoldier;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,CAACA,CAACC,CAAC,EAAEC,GAAG,EAAE;EACjB,MAAMC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAE1B,MAAMC,MAAM,GAAGF,GAAG,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,EAAEC,CAAC,KAAK;IAC7C,MAAMC,WAAW,GAAGP,GAAG,CAACM,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIE,MAAM,CAACH,OAAO,CAAC,GAAGG,MAAM,CAACD,WAAW,CAAC,EAAE;MACzC,OAAOH,GAAG,GAAG,CAAC;IAChB;IAEA,OAAOA,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC;EAEL,OAAOF,MAAM;AACf;AAEA,SAASO,YAAYA,CAACX,CAAC,EAAEC,GAAG,EAAE;EAC5B,MAAMW,YAAY,GAAGX,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,MAAMD,GAAG,GAAG,IAAIW,KAAK,CAACb,CAAC,CAAC,CAACc,IAAI,CAAC,CAAC,CAAC;EAEhC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,CAAC,EAAEQ,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAEO,CAAC,EAAE,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACf,GAAG,EAAEM,CAAC,EAAEO,CAAC,EAAEH,YAAY,CAACJ,CAAC,CAAC,EAAEI,YAAY,CAACG,CAAC,CAAC,CAAC;MACxD,IAAIH,YAAY,CAACJ,CAAC,CAAC,GAAGI,YAAY,CAACG,CAAC,CAAC,EAAE;QACrCb,GAAG,CAACM,CAAC,CAAC,GAAGU,IAAI,CAACC,GAAG,CAACjB,GAAG,CAACM,CAAC,CAAC,EAAEN,GAAG,CAACa,CAAC,CAAC,GAAG,CAAC,CAAC;MACvC;IACF;EACF;;EAEA;AACF;AAEA,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}