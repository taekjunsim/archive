{"ast":null,"code":"/**\n * Array의 fill 메소드에 인자로 참조 타입(객체, 배열 등)을 넣으면\n * 배열의 각 요소는\n * https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n\nconst matrixAddition = () => {\n  const test = `3 3\n  1 1 1\n  2 2 2\n  0 1 0\n  3 3 3\n  4 4 4\n  5 5 100`;\n  const [nm, ...arr] = test.trim().split(\"\\n\");\n  const [n, m] = nm.trim().split(\" \").map(Number);\n  const matrix = [];\n  const result = new Array(n).fill(0).map(_ => []);\n  for (let i = 0; i < arr.length / n; i++) {\n    matrix[i] = arr.slice(i * n, (i + 1) * n).map(el => {\n      return el.trim().split(\" \").map(Number);\n    });\n  }\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n      result[i][j] = matrix[0][i][j] + matrix[1][i][j];\n    }\n    result[i] = result[i].join(\" \");\n  }\n  console.log(result.join(\"\\n\"));\n};\nexport default matrixAddition;","map":{"version":3,"names":["matrixAddition","test","nm","arr","trim","split","n","m","map","Number","matrix","result","Array","fill","_","i","length","slice","el","j","join","console","log"],"sources":["/Users/taekjunsim/Desktop/project/archive/packages/algorithm/src/matrix/index.js"],"sourcesContent":["/**\n * Array의 fill 메소드에 인자로 참조 타입(객체, 배열 등)을 넣으면\n * 배열의 각 요소는\n * https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n\nconst matrixAddition = () => {\n  const test = `3 3\n  1 1 1\n  2 2 2\n  0 1 0\n  3 3 3\n  4 4 4\n  5 5 100`;\n\n  const [nm, ...arr] = test.trim().split(\"\\n\");\n  const [n, m] = nm.trim().split(\" \").map(Number);\n  const matrix = [];\n  const result = new Array(n).fill(0).map((_) => []);\n\n  for (let i = 0; i < arr.length / n; i++) {\n    matrix[i] = arr.slice(i * n, (i + 1) * n).map((el) => {\n      return el.trim().split(\" \").map(Number);\n    });\n  }\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n      result[i][j] = matrix[0][i][j] + matrix[1][i][j];\n    }\n    result[i] = result[i].join(\" \");\n  }\n\n  console.log(result.join(\"\\n\"));\n};\n\nexport default matrixAddition;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,IAAI,GAAG;AACf;AACA;AACA;AACA;AACA;AACA,UAAU;EAER,MAAM,CAACC,EAAE,EAAE,GAAGC,GAAG,CAAC,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGL,EAAE,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;EAC/C,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG,IAAIC,KAAK,CAACN,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC,CAACL,GAAG,CAAEM,CAAC,IAAK,EAAE,CAAC;EAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,GAAG,CAACa,MAAM,GAAGV,CAAC,EAAES,CAAC,EAAE,EAAE;IACvCL,MAAM,CAACK,CAAC,CAAC,GAAGZ,GAAG,CAACc,KAAK,CAACF,CAAC,GAAGT,CAAC,EAAE,CAACS,CAAC,GAAG,CAAC,IAAIT,CAAC,CAAC,CAACE,GAAG,CAAEU,EAAE,IAAK;MACpD,OAAOA,EAAE,CAACd,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;IACzC,CAAC,CAAC;EACJ;EAEA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,EAAES,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,CAAC,EAAEY,CAAC,EAAE,EAAE;MAC1BR,MAAM,CAACI,CAAC,CAAC,CAACI,CAAC,CAAC,GAAGT,MAAM,CAAC,CAAC,CAAC,CAACK,CAAC,CAAC,CAACI,CAAC,CAAC,GAAGT,MAAM,CAAC,CAAC,CAAC,CAACK,CAAC,CAAC,CAACI,CAAC,CAAC;IAClD;IACAR,MAAM,CAACI,CAAC,CAAC,GAAGJ,MAAM,CAACI,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;EACjC;EAEAC,OAAO,CAACC,GAAG,CAACX,MAAM,CAACS,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,eAAepB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}